// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow that analyzes the Sankey diagram and suggests optimized routing rules.
 *
 * - suggestOptimizedRoutingRules - A function that suggests optimized routing rules based on the Sankey diagram.
 * - SuggestOptimizedRoutingRulesInput - The input type for the suggestOptimizedRoutingRules function.
 * - SuggestOptimizedRoutingRulesOutput - The return type for the suggestOptimizedRoutingRules function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestOptimizedRoutingRulesInputSchema = z.object({
  sankeyDiagramData: z.string().describe('The data representing the Sankey diagram in JSON format.'),
  currentRoutingRules: z.string().describe('The current routing rules in JSON format.'),
  overallSuccessRate: z.number().describe('The current overall success rate.'),
  processorWiseSuccessRates: z.string().describe('The processor-wise success rates in JSON format.'),
});
export type SuggestOptimizedRoutingRulesInput = z.infer<typeof SuggestOptimizedRoutingRulesInputSchema>;

const SuggestOptimizedRoutingRulesOutputSchema = z.object({
  suggestedRoutingRules: z.string().describe('The suggested optimized routing rules in JSON format.'),
  reasoning: z.string().describe('The reasoning behind the suggested routing rules.'),
  expectedSuccessRateImprovement: z.number().describe('The expected improvement in the overall success rate, as a percentage.'),
  expectedCostReduction: z.number().describe('The expected cost reduction, as a percentage.'),
});
export type SuggestOptimizedRoutingRulesOutput = z.infer<typeof SuggestOptimizedRoutingRulesOutputSchema>;

export async function suggestOptimizedRoutingRules(input: SuggestOptimizedRoutingRulesInput): Promise<SuggestOptimizedRoutingRulesOutput> {
  return suggestOptimizedRoutingRulesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestOptimizedRoutingRulesPrompt',
  input: {schema: SuggestOptimizedRoutingRulesInputSchema},
  output: {schema: SuggestOptimizedRoutingRulesOutputSchema},
  prompt: `You are an expert payment routing optimizer. Analyze the provided Sankey diagram data, current routing rules, overall success rate, and processor-wise success rates to suggest optimized routing rules that minimize cost and maximize success rate.

Sankey Diagram Data: {{{sankeyDiagramData}}}
Current Routing Rules: {{{currentRoutingRules}}}
Overall Success Rate: {{{overallSuccessRate}}}
Processor-wise Success Rates: {{{processorWiseSuccessRates}}}

Based on this data, suggest optimized routing rules in JSON format, provide a clear reasoning for your suggestions, and estimate the expected improvement in the overall success rate and cost reduction as percentages.

Ensure that the suggestedRoutingRules is a valid JSON format. Make sure to use double quotes for keys and values.
`,
});

const suggestOptimizedRoutingRulesFlow = ai.defineFlow(
  {
    name: 'suggestOptimizedRoutingRulesFlow',
    inputSchema: SuggestOptimizedRoutingRulesInputSchema,
    outputSchema: SuggestOptimizedRoutingRulesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
